/**
2021年11月28日 
*/
#include <iostream>
using namespace std;

void f()
{
	//int a = 0;
	static int a = 0;
	//这样写就把a定义成了函数f的静态变量，此时这个a只定义了一次(不管它被调用了多少次) 
	//并且这个a只属于这个函数
	//并且这个a在函数被调用完后并不会被回收，在多次调用的话，我们操作的是同一个a 
	++a;
	cout<<a<<endl;
} 

int main()
{
	for(int i = 0; i <= 5; i++)
	{
		f(); 
		//函数运行一次，就会重新定义一次a，函数结束一次，空间就会被收回一次，它的生命就结束了
		//也就是说，我们这6次循环，一共定义了6个不同的a，销毁了6个不同的a,显然是没有什么累加的操作在里面 
		//每个a只从0变成1，输出了一次 
	} 
	return 0;
}  
